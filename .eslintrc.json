{
  "env": {
    "browser": true,
    "node": true,
    "jest": true
  },
  "plugins": ["react", "@typescript-eslint"],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:react/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:jsx-a11y/recommended",
    "plugin:react-hooks/recommended",
    "airbnb",
    "prettier",
    "prettier/react",
    "prettier/@typescript-eslint"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json", // based on the execution context, in this case './src' as <root>
    "tsconfigRootDir": "./src",
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 12,
    "sourceType": "module"
  },
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true
      }
    }
  },
  "rules": {
    "react/jsx-filename-extension": [1, { "extensions": [".jsx", ".tsx"] }],
    "import/extensions": [
      "error",
      {
        "tsx": "never",
        "ts": "never",
        "js": "never",
        "jsx": "never",
        "mdx": "never"
      }
    ],
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": "off",
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": "error",
    "react/jsx-props-no-spreading": "off",
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": [
          "**/*.test.js",
          "**/*.spec.js",
          "**/*.test.ts",
          "**/*.spec.ts",
          "**/*.test.jsx",
          "**/*.spec.jsx",
          "**/*.test.tsx",
          "**/*.spec.tsx",
          "./src/stories/**/*.ts",
          "./src/stories/**/*.js",
          "./src/stories/**/*.tsx",
          "./src/stories/**/*.jsx"
        ]
      }
    ],
    "@typescript-eslint/no-empty-interface": "warn",
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": ["error"],
    "@typescript-eslint/no-unsafe-assignment": "warn",
    "@typescript-eslint/no-unsafe-call": "warn",
    "react/forbid-prop-types": "off",
    "@typescript-eslint/strict-boolean-expressions": "error",
    "@typescript-eslint/prefer-nullish-coalescing": "error",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "variable",
        "modifiers": ["const"],
        "format": ["camelCase", "PascalCase", "UPPER_CASE"]
      },
      {
        "selector": ["variable", "function", "method"],
        "format": ["camelCase"]
      },
      {
        "selector": "parameter",
        "format": ["camelCase", "PascalCase"]
      },
      {
        "selector": ["property", "accessor", "parameterProperty"],
        "format": ["camelCase", "PascalCase"]
      },
      {
        "selector": [
          "class",
          "enum",
          "enumMember",
          "typeAlias",
          "typeParameter",
          "interface"
        ],
        "format": ["PascalCase"]
      }
    ],
    "func-names": ["error", "always"]
  },
  "overrides": [
    {
      "files": ["*.js"],
      "rules": {
        "@typescript-eslint/no-var-requires": "off"
      }
    }
  ]
}
